// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: task.proto

package ttmeshproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Input parameter declaration
type ParamDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // unique within invoke
	MediaType     string                 `protobuf:"bytes,2,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`          // MIME type
	SchemaRef     string                 `protobuf:"bytes,3,opt,name=schema_ref,json=schemaRef,proto3" json:"schema_ref,omitempty"`          // optional schema link
	Streamed      bool                   `protobuf:"varint,4,opt,name=streamed,proto3" json:"streamed,omitempty"`                            // true => ParamChunk will arrive
	TotalSize     uint64                 `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`         // total bytes if known
	Required      bool                   `protobuf:"varint,6,opt,name=required,proto3" json:"required,omitempty"`                            // whether required
	IntegrityAlg  string                 `protobuf:"bytes,7,opt,name=integrity_alg,json=integrityAlg,proto3" json:"integrity_alg,omitempty"` // "sha256"/"blake3"
	Integrity     []byte                 `protobuf:"bytes,8,opt,name=integrity,proto3" json:"integrity,omitempty"`                           // hash of full param (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParamDescriptor) Reset() {
	*x = ParamDescriptor{}
	mi := &file_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParamDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamDescriptor) ProtoMessage() {}

func (x *ParamDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamDescriptor.ProtoReflect.Descriptor instead.
func (*ParamDescriptor) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{0}
}

func (x *ParamDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParamDescriptor) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ParamDescriptor) GetSchemaRef() string {
	if x != nil {
		return x.SchemaRef
	}
	return ""
}

func (x *ParamDescriptor) GetStreamed() bool {
	if x != nil {
		return x.Streamed
	}
	return false
}

func (x *ParamDescriptor) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ParamDescriptor) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ParamDescriptor) GetIntegrityAlg() string {
	if x != nil {
		return x.IntegrityAlg
	}
	return ""
}

func (x *ParamDescriptor) GetIntegrity() []byte {
	if x != nil {
		return x.Integrity
	}
	return nil
}

// Invoke specification: either inline_args, blobs, or later chunks
type Invoke struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        []*ParamDescriptor     `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`                                                                                                     // input declarations
	InlineArgs    map[string][]byte      `protobuf:"bytes,2,rep,name=inline_args,json=inlineArgs,proto3" json:"inline_args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // small inputs
	Blobs         map[string]*BlobRef    `protobuf:"bytes,3,rep,name=blobs,proto3" json:"blobs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                             // large inputs by reference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Invoke) Reset() {
	*x = Invoke{}
	mi := &file_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoke) ProtoMessage() {}

func (x *Invoke) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoke.ProtoReflect.Descriptor instead.
func (*Invoke) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{1}
}

func (x *Invoke) GetParams() []*ParamDescriptor {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Invoke) GetInlineArgs() map[string][]byte {
	if x != nil {
		return x.InlineArgs
	}
	return nil
}

func (x *Invoke) GetBlobs() map[string]*BlobRef {
	if x != nil {
		return x.Blobs
	}
	return nil
}

// Streaming chunk for a specific parameter
type ParamChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParamName     string                 `protobuf:"bytes,1,opt,name=param_name,json=paramName,proto3" json:"param_name,omitempty"`
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // 0..N
	Offset        uint64                 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // byte offset
	Last          bool                   `protobuf:"varint,4,opt,name=last,proto3" json:"last,omitempty"`     // last chunk of this param
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`      // payload
	Crc32         uint32                 `protobuf:"varint,6,opt,name=crc32,proto3" json:"crc32,omitempty"`   // optional per-chunk crc
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParamChunk) Reset() {
	*x = ParamChunk{}
	mi := &file_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParamChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamChunk) ProtoMessage() {}

func (x *ParamChunk) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamChunk.ProtoReflect.Descriptor instead.
func (*ParamChunk) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{2}
}

func (x *ParamChunk) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *ParamChunk) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ParamChunk) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ParamChunk) GetLast() bool {
	if x != nil {
		return x.Last
	}
	return false
}

func (x *ParamChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ParamChunk) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

// Named output: inline data or blob reference
type Output struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Output_InlineData
	//	*Output_Blob
	Payload       isOutput_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Output) GetPayload() isOutput_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Output) GetInlineData() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Output_InlineData); ok {
			return x.InlineData
		}
	}
	return nil
}

func (x *Output) GetBlob() *BlobRef {
	if x != nil {
		if x, ok := x.Payload.(*Output_Blob); ok {
			return x.Blob
		}
	}
	return nil
}

type isOutput_Payload interface {
	isOutput_Payload()
}

type Output_InlineData struct {
	InlineData []byte `protobuf:"bytes,2,opt,name=inline_data,json=inlineData,proto3,oneof"`
}

type Output_Blob struct {
	Blob *BlobRef `protobuf:"bytes,3,opt,name=blob,proto3,oneof"`
}

func (*Output_InlineData) isOutput_Payload() {}

func (*Output_Blob) isOutput_Payload() {}

// Rich result with status, logs and metrics
type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=ttmesh.proto.Status" json:"status,omitempty"` // OK/PARTIAL/FAILED/...
	Outputs       []*Output              `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`                         // step outputs
	Logs          []*LogLine             `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`                               // logs (can be PARTIAL)
	Metrics       *Metrics               `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`                         // metrics
	ErrorCode     string                 `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`    // error code when failed
	ErrorMsg      string                 `protobuf:"bytes,6,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`       // error message
	Final         bool                   `protobuf:"varint,7,opt,name=final,proto3" json:"final,omitempty"`                            // final for current step_id
	Progress      float32                `protobuf:"fixed32,8,opt,name=progress,proto3" json:"progress,omitempty"`                     // 0..1 (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{4}
}

func (x *Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_ST_OK
}

func (x *Result) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Result) GetLogs() []*LogLine {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Result) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Result) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *Result) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *Result) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *Result) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

var File_task_proto protoreflect.FileDescriptor

const file_task_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"task.proto\x12\fttmesh.proto\x1a\fcommon.proto\"\xfd\x01\n" +
	"\x0fParamDescriptor\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"media_type\x18\x02 \x01(\tR\tmediaType\x12\x1d\n" +
	"\n" +
	"schema_ref\x18\x03 \x01(\tR\tschemaRef\x12\x1a\n" +
	"\bstreamed\x18\x04 \x01(\bR\bstreamed\x12\x1d\n" +
	"\n" +
	"total_size\x18\x05 \x01(\x04R\ttotalSize\x12\x1a\n" +
	"\brequired\x18\x06 \x01(\bR\brequired\x12#\n" +
	"\rintegrity_alg\x18\a \x01(\tR\fintegrityAlg\x12\x1c\n" +
	"\tintegrity\x18\b \x01(\fR\tintegrity\"\xcd\x02\n" +
	"\x06Invoke\x125\n" +
	"\x06params\x18\x01 \x03(\v2\x1d.ttmesh.proto.ParamDescriptorR\x06params\x12E\n" +
	"\vinline_args\x18\x02 \x03(\v2$.ttmesh.proto.Invoke.InlineArgsEntryR\n" +
	"inlineArgs\x125\n" +
	"\x05blobs\x18\x03 \x03(\v2\x1f.ttmesh.proto.Invoke.BlobsEntryR\x05blobs\x1a=\n" +
	"\x0fInlineArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\n" +
	"BlobsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.ttmesh.proto.BlobRefR\x05value:\x028\x01\"\x97\x01\n" +
	"\n" +
	"ParamChunk\x12\x1d\n" +
	"\n" +
	"param_name\x18\x01 \x01(\tR\tparamName\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x04R\x06offset\x12\x12\n" +
	"\x04last\x18\x04 \x01(\bR\x04last\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x14\n" +
	"\x05crc32\x18\x06 \x01(\rR\x05crc32\"w\n" +
	"\x06Output\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\vinline_data\x18\x02 \x01(\fH\x00R\n" +
	"inlineData\x12+\n" +
	"\x04blob\x18\x03 \x01(\v2\x15.ttmesh.proto.BlobRefH\x00R\x04blobB\t\n" +
	"\apayload\"\xb0\x02\n" +
	"\x06Result\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.ttmesh.proto.StatusR\x06status\x12.\n" +
	"\aoutputs\x18\x02 \x03(\v2\x14.ttmesh.proto.OutputR\aoutputs\x12)\n" +
	"\x04logs\x18\x03 \x03(\v2\x15.ttmesh.proto.LogLineR\x04logs\x12/\n" +
	"\ametrics\x18\x04 \x01(\v2\x15.ttmesh.proto.MetricsR\ametrics\x12\x1d\n" +
	"\n" +
	"error_code\x18\x05 \x01(\tR\terrorCode\x12\x1b\n" +
	"\terror_msg\x18\x06 \x01(\tR\berrorMsg\x12\x14\n" +
	"\x05final\x18\a \x01(\bR\x05final\x12\x1a\n" +
	"\bprogress\x18\b \x01(\x02R\bprogressB'Z%ttmesh/pkg/protocol/proto;ttmeshprotob\x06proto3"

var (
	file_task_proto_rawDescOnce sync.Once
	file_task_proto_rawDescData []byte
)

func file_task_proto_rawDescGZIP() []byte {
	file_task_proto_rawDescOnce.Do(func() {
		file_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)))
	})
	return file_task_proto_rawDescData
}

var file_task_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_task_proto_goTypes = []any{
	(*ParamDescriptor)(nil), // 0: ttmesh.proto.ParamDescriptor
	(*Invoke)(nil),          // 1: ttmesh.proto.Invoke
	(*ParamChunk)(nil),      // 2: ttmesh.proto.ParamChunk
	(*Output)(nil),          // 3: ttmesh.proto.Output
	(*Result)(nil),          // 4: ttmesh.proto.Result
	nil,                     // 5: ttmesh.proto.Invoke.InlineArgsEntry
	nil,                     // 6: ttmesh.proto.Invoke.BlobsEntry
	(*BlobRef)(nil),         // 7: ttmesh.proto.BlobRef
	(Status)(0),             // 8: ttmesh.proto.Status
	(*LogLine)(nil),         // 9: ttmesh.proto.LogLine
	(*Metrics)(nil),         // 10: ttmesh.proto.Metrics
}
var file_task_proto_depIdxs = []int32{
	0,  // 0: ttmesh.proto.Invoke.params:type_name -> ttmesh.proto.ParamDescriptor
	5,  // 1: ttmesh.proto.Invoke.inline_args:type_name -> ttmesh.proto.Invoke.InlineArgsEntry
	6,  // 2: ttmesh.proto.Invoke.blobs:type_name -> ttmesh.proto.Invoke.BlobsEntry
	7,  // 3: ttmesh.proto.Output.blob:type_name -> ttmesh.proto.BlobRef
	8,  // 4: ttmesh.proto.Result.status:type_name -> ttmesh.proto.Status
	3,  // 5: ttmesh.proto.Result.outputs:type_name -> ttmesh.proto.Output
	9,  // 6: ttmesh.proto.Result.logs:type_name -> ttmesh.proto.LogLine
	10, // 7: ttmesh.proto.Result.metrics:type_name -> ttmesh.proto.Metrics
	7,  // 8: ttmesh.proto.Invoke.BlobsEntry.value:type_name -> ttmesh.proto.BlobRef
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_task_proto_init() }
func file_task_proto_init() {
	if File_task_proto != nil {
		return
	}
	file_common_proto_init()
	file_task_proto_msgTypes[3].OneofWrappers = []any{
		(*Output_InlineData)(nil),
		(*Output_Blob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_proto_goTypes,
		DependencyIndexes: file_task_proto_depIdxs,
		MessageInfos:      file_task_proto_msgTypes,
	}.Build()
	File_task_proto = out.File
	file_task_proto_goTypes = nil
	file_task_proto_depIdxs = nil
}
