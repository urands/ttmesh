// proto definitions for ttmesh (optional gRPC layer)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: worker.proto

package ttmeshproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureFlags struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SupportsStreamInput  bool                   `protobuf:"varint,1,opt,name=supports_stream_input,json=supportsStreamInput,proto3" json:"supports_stream_input,omitempty"`              // ParamChunk вход
	SupportsStreamOutput bool                   `protobuf:"varint,2,opt,name=supports_stream_output,json=supportsStreamOutput,proto3" json:"supports_stream_output,omitempty"`           // Result чанками
	SupportsFlowControl  bool                   `protobuf:"varint,3,opt,name=supports_flow_control,json=supportsFlowControl,proto3" json:"supports_flow_control,omitempty"`              // кредитная модель
	SupportsCompression  bool                   `protobuf:"varint,4,opt,name=supports_compression,json=supportsCompression,proto3" json:"supports_compression,omitempty"`                // gzip/zstd и т.д.
	SupportsQuic         bool                   `protobuf:"varint,5,opt,name=supports_quic,json=supportsQuic,proto3" json:"supports_quic,omitempty"`                                     // HTTP/3/QUIC transport
	SupportsGrpc         bool                   `protobuf:"varint,6,opt,name=supports_grpc,json=supportsGrpc,proto3" json:"supports_grpc,omitempty"`                                     // gRPC/HTTP2 transport
	SupportsShm          bool                   `protobuf:"varint,7,opt,name=supports_shm,json=supportsShm,proto3" json:"supports_shm,omitempty"`                                        // shared memory data-plane
	SupportsMmap         bool                   `protobuf:"varint,8,opt,name=supports_mmap,json=supportsMmap,proto3" json:"supports_mmap,omitempty"`                                     // mmap files data-plane
	SupportsZeroCopy     bool                   `protobuf:"varint,9,opt,name=supports_zero_copy,json=supportsZeroCopy,proto3" json:"supports_zero_copy,omitempty"`                       // zero-copy внутри узла
	Ext                  map[string]string      `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // произвольные фичи и версии
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FeatureFlags) Reset() {
	*x = FeatureFlags{}
	mi := &file_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureFlags) ProtoMessage() {}

func (x *FeatureFlags) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureFlags.ProtoReflect.Descriptor instead.
func (*FeatureFlags) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureFlags) GetSupportsStreamInput() bool {
	if x != nil {
		return x.SupportsStreamInput
	}
	return false
}

func (x *FeatureFlags) GetSupportsStreamOutput() bool {
	if x != nil {
		return x.SupportsStreamOutput
	}
	return false
}

func (x *FeatureFlags) GetSupportsFlowControl() bool {
	if x != nil {
		return x.SupportsFlowControl
	}
	return false
}

func (x *FeatureFlags) GetSupportsCompression() bool {
	if x != nil {
		return x.SupportsCompression
	}
	return false
}

func (x *FeatureFlags) GetSupportsQuic() bool {
	if x != nil {
		return x.SupportsQuic
	}
	return false
}

func (x *FeatureFlags) GetSupportsGrpc() bool {
	if x != nil {
		return x.SupportsGrpc
	}
	return false
}

func (x *FeatureFlags) GetSupportsShm() bool {
	if x != nil {
		return x.SupportsShm
	}
	return false
}

func (x *FeatureFlags) GetSupportsMmap() bool {
	if x != nil {
		return x.SupportsMmap
	}
	return false
}

func (x *FeatureFlags) GetSupportsZeroCopy() bool {
	if x != nil {
		return x.SupportsZeroCopy
	}
	return false
}

func (x *FeatureFlags) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type ResourceCapacity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuMillicores uint32                 `protobuf:"varint,1,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"` // суммарно/доступно
	MemBytes      uint64                 `protobuf:"varint,2,opt,name=mem_bytes,json=memBytes,proto3" json:"mem_bytes,omitempty"`
	GpuCount      uint32                 `protobuf:"varint,3,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	VramBytes     uint64                 `protobuf:"varint,4,opt,name=vram_bytes,json=vramBytes,proto3" json:"vram_bytes,omitempty"`
	Ext           map[string]string      `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // например, NUMA/сокеты
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceCapacity) Reset() {
	*x = ResourceCapacity{}
	mi := &file_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceCapacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCapacity) ProtoMessage() {}

func (x *ResourceCapacity) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCapacity.ProtoReflect.Descriptor instead.
func (*ResourceCapacity) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceCapacity) GetCpuMillicores() uint32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *ResourceCapacity) GetMemBytes() uint64 {
	if x != nil {
		return x.MemBytes
	}
	return 0
}

func (x *ResourceCapacity) GetGpuCount() uint32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *ResourceCapacity) GetVramBytes() uint64 {
	if x != nil {
		return x.VramBytes
	}
	return 0
}

func (x *ResourceCapacity) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type GpuInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vendor        string                 `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`                           // "nvidia", "amd", "intel"
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`                             // "A100", "MI250", "Arc"
	ComputeCap    string                 `protobuf:"bytes,3,opt,name=compute_cap,json=computeCap,proto3" json:"compute_cap,omitempty"` // "8.0", "sm_80", etc.
	VramBytes     uint64                 `protobuf:"varint,4,opt,name=vram_bytes,json=vramBytes,proto3" json:"vram_bytes,omitempty"`
	Ext           map[string]string      `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // "nvenc": "true", ...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GpuInfo) Reset() {
	*x = GpuInfo{}
	mi := &file_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInfo) ProtoMessage() {}

func (x *GpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInfo.ProtoReflect.Descriptor instead.
func (*GpuInfo) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{2}
}

func (x *GpuInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *GpuInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GpuInfo) GetComputeCap() string {
	if x != nil {
		return x.ComputeCap
	}
	return ""
}

func (x *GpuInfo) GetVramBytes() uint64 {
	if x != nil {
		return x.VramBytes
	}
	return 0
}

func (x *GpuInfo) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type AccelInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"` // "tpu", "fpga", "vpu", ...
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Ext           map[string]string      `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccelInfo) Reset() {
	*x = AccelInfo{}
	mi := &file_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccelInfo) ProtoMessage() {}

func (x *AccelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccelInfo.ProtoReflect.Descriptor instead.
func (*AccelInfo) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{3}
}

func (x *AccelInfo) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AccelInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AccelInfo) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type StorageMount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // логический id
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"` // "ssd", "hdd", "nvme", "s3", "nfs"
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"` // локальный путь/URI
	CapacityBytes uint64                 `protobuf:"varint,4,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"`
	FreeBytes     uint64                 `protobuf:"varint,5,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,50,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // "region", "tier", ...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageMount) Reset() {
	*x = StorageMount{}
	mi := &file_worker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageMount) ProtoMessage() {}

func (x *StorageMount) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageMount.ProtoReflect.Descriptor instead.
func (*StorageMount) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{4}
}

func (x *StorageMount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageMount) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *StorageMount) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StorageMount) GetCapacityBytes() uint64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

func (x *StorageMount) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *StorageMount) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type NetworkEndpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scheme        string                 `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`                                                                           // "grpc+tcp", "grpc+uds", "quic", "shm"
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                                         // "127.0.0.1:50051", "unix:///tmp/tt.sock"
	Params        map[string]string      `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // "alpn":"h3", "mtu":"1450", ...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEndpoint) Reset() {
	*x = NetworkEndpoint{}
	mi := &file_worker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpoint) ProtoMessage() {}

func (x *NetworkEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpoint.ProtoReflect.Descriptor instead.
func (*NetworkEndpoint) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkEndpoint) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *NetworkEndpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NetworkEndpoint) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type ResourceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuMillicores uint32                 `protobuf:"varint,1,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"` // требуемый минимум
	MemBytes      uint64                 `protobuf:"varint,2,opt,name=mem_bytes,json=memBytes,proto3" json:"mem_bytes,omitempty"`
	GpuCount      uint32                 `protobuf:"varint,3,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	GpuClass      string                 `protobuf:"bytes,4,opt,name=gpu_class,json=gpuClass,proto3" json:"gpu_class,omitempty"` // "nvidia", "any", "A100"
	VramBytes     uint64                 `protobuf:"varint,5,opt,name=vram_bytes,json=vramBytes,proto3" json:"vram_bytes,omitempty"`
	Accelerators  []string               `protobuf:"bytes,6,rep,name=accelerators,proto3" json:"accelerators,omitempty"` // "tpu", "fpga", ...
	Ext           map[string]string      `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceReq) Reset() {
	*x = ResourceReq{}
	mi := &file_worker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceReq) ProtoMessage() {}

func (x *ResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceReq.ProtoReflect.Descriptor instead.
func (*ResourceReq) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceReq) GetCpuMillicores() uint32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *ResourceReq) GetMemBytes() uint64 {
	if x != nil {
		return x.MemBytes
	}
	return 0
}

func (x *ResourceReq) GetGpuCount() uint32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *ResourceReq) GetGpuClass() string {
	if x != nil {
		return x.GpuClass
	}
	return ""
}

func (x *ResourceReq) GetVramBytes() uint64 {
	if x != nil {
		return x.VramBytes
	}
	return 0
}

func (x *ResourceReq) GetAccelerators() []string {
	if x != nil {
		return x.Accelerators
	}
	return nil
}

func (x *ResourceReq) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type FunctionDesc struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Человекочитаемая идентичность
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // уникальное имя задачи
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // семвер/тег
	// Стабильная идентичность реализации (одинакова у идентичных воркеров)
	StableId        string            `protobuf:"bytes,10,opt,name=stable_id,json=stableId,proto3" json:"stable_id,omitempty"` // канонический ID (опц.)
	HashAlg         string            `protobuf:"bytes,11,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`    // "sha256", "blake3"
	Hash            []byte            `protobuf:"bytes,12,opt,name=hash,proto3" json:"hash,omitempty"`                         // дайджест по канонизированному описанию/пакету
	StreamInput     bool              `protobuf:"varint,3,opt,name=stream_input,json=streamInput,proto3" json:"stream_input,omitempty"`
	StreamOutput    bool              `protobuf:"varint,4,opt,name=stream_output,json=streamOutput,proto3" json:"stream_output,omitempty"`
	PriorityDefault uint32            `protobuf:"varint,5,opt,name=priority_default,json=priorityDefault,proto3" json:"priority_default,omitempty"`                              // 0..255 по умолчанию
	MinReq          *ResourceReq      `protobuf:"bytes,6,opt,name=min_req,json=minReq,proto3" json:"min_req,omitempty"`                                                          // минимальные требования
	Meta            map[string]string `protobuf:"bytes,50,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // произвольные аннотации (DAG role, ABI, lang, etc.)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FunctionDesc) Reset() {
	*x = FunctionDesc{}
	mi := &file_worker_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionDesc) ProtoMessage() {}

func (x *FunctionDesc) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionDesc.ProtoReflect.Descriptor instead.
func (*FunctionDesc) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{7}
}

func (x *FunctionDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionDesc) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FunctionDesc) GetStableId() string {
	if x != nil {
		return x.StableId
	}
	return ""
}

func (x *FunctionDesc) GetHashAlg() string {
	if x != nil {
		return x.HashAlg
	}
	return ""
}

func (x *FunctionDesc) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *FunctionDesc) GetStreamInput() bool {
	if x != nil {
		return x.StreamInput
	}
	return false
}

func (x *FunctionDesc) GetStreamOutput() bool {
	if x != nil {
		return x.StreamOutput
	}
	return false
}

func (x *FunctionDesc) GetPriorityDefault() uint32 {
	if x != nil {
		return x.PriorityDefault
	}
	return 0
}

func (x *FunctionDesc) GetMinReq() *ResourceReq {
	if x != nil {
		return x.MinReq
	}
	return nil
}

func (x *FunctionDesc) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

type WorkerRegister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`                                                        // стабильный ID воркера
	Self          *NodeRef               `protobuf:"bytes,2,opt,name=self,proto3" json:"self,omitempty"`                                                                                // собственная ссылка/адрес
	Functions     []*FunctionDesc        `protobuf:"bytes,3,rep,name=functions,proto3" json:"functions,omitempty"`                                                                      // список поддерживаемых задач
	CapacityTotal *ResourceCapacity      `protobuf:"bytes,4,opt,name=capacity_total,json=capacityTotal,proto3" json:"capacity_total,omitempty"`                                         // общая вместимость
	CapacityFree  *ResourceCapacity      `protobuf:"bytes,5,opt,name=capacity_free,json=capacityFree,proto3" json:"capacity_free,omitempty"`                                            // доступно сейчас (hint)
	Gpus          []*GpuInfo             `protobuf:"bytes,6,rep,name=gpus,proto3" json:"gpus,omitempty"`                                                                                // описания GPU (если есть)
	Accels        []*AccelInfo           `protobuf:"bytes,7,rep,name=accels,proto3" json:"accels,omitempty"`                                                                            // доп. ускорители
	Storage       []*StorageMount        `protobuf:"bytes,8,rep,name=storage,proto3" json:"storage,omitempty"`                                                                          // доступные стораджи
	Endpoints     []*NetworkEndpoint     `protobuf:"bytes,9,rep,name=endpoints,proto3" json:"endpoints,omitempty"`                                                                      // как к воркеру достучаться
	Features      *FeatureFlags          `protobuf:"bytes,10,opt,name=features,proto3" json:"features,omitempty"`                                                                       // флаги возможностей
	Region        string                 `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`                                                                           // логический регион
	Zone          string                 `protobuf:"bytes,12,opt,name=zone,proto3" json:"zone,omitempty"`                                                                               // зона/стойка
	GeoHash       string                 `protobuf:"bytes,13,opt,name=geo_hash,json=geoHash,proto3" json:"geo_hash,omitempty"`                                                          // геопривязка (для near-data)
	Labels        map[string]string      `protobuf:"bytes,14,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // произвольные лейблы/теги
	PublicKey     []byte                 `protobuf:"bytes,15,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                                                    // опционально: верификация
	Auth          map[string]string      `protobuf:"bytes,16,rep,name=auth,proto3" json:"auth,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`     // токены/подписи (если нужно)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerRegister) Reset() {
	*x = WorkerRegister{}
	mi := &file_worker_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegister) ProtoMessage() {}

func (x *WorkerRegister) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegister.ProtoReflect.Descriptor instead.
func (*WorkerRegister) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerRegister) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerRegister) GetSelf() *NodeRef {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *WorkerRegister) GetFunctions() []*FunctionDesc {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *WorkerRegister) GetCapacityTotal() *ResourceCapacity {
	if x != nil {
		return x.CapacityTotal
	}
	return nil
}

func (x *WorkerRegister) GetCapacityFree() *ResourceCapacity {
	if x != nil {
		return x.CapacityFree
	}
	return nil
}

func (x *WorkerRegister) GetGpus() []*GpuInfo {
	if x != nil {
		return x.Gpus
	}
	return nil
}

func (x *WorkerRegister) GetAccels() []*AccelInfo {
	if x != nil {
		return x.Accels
	}
	return nil
}

func (x *WorkerRegister) GetStorage() []*StorageMount {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *WorkerRegister) GetEndpoints() []*NetworkEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *WorkerRegister) GetFeatures() *FeatureFlags {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *WorkerRegister) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *WorkerRegister) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *WorkerRegister) GetGeoHash() string {
	if x != nil {
		return x.GeoHash
	}
	return ""
}

func (x *WorkerRegister) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WorkerRegister) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *WorkerRegister) GetAuth() map[string]string {
	if x != nil {
		return x.Auth
	}
	return nil
}

// Объявление (для распространения по mesh) — компактное
type WorkerAdvert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Self          *NodeRef               `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	Functions     []*FunctionDesc        `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"` // функции с заполненными hash/stable_id
	TsUnixMs      int64                  `protobuf:"varint,3,opt,name=ts_unix_ms,json=tsUnixMs,proto3" json:"ts_unix_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerAdvert) Reset() {
	*x = WorkerAdvert{}
	mi := &file_worker_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerAdvert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerAdvert) ProtoMessage() {}

func (x *WorkerAdvert) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerAdvert.ProtoReflect.Descriptor instead.
func (*WorkerAdvert) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerAdvert) GetSelf() *NodeRef {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *WorkerAdvert) GetFunctions() []*FunctionDesc {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *WorkerAdvert) GetTsUnixMs() int64 {
	if x != nil {
		return x.TsUnixMs
	}
	return 0
}

// Запрос поиска воркера по функции
type WorkerQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // может быть пустым, если ищем по хэшу
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // селектор семвер (опц.)
	HashAlg       string                 `protobuf:"bytes,3,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
	Hash          []byte                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // ограничения (регион, capability)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerQuery) Reset() {
	*x = WorkerQuery{}
	mi := &file_worker_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerQuery) ProtoMessage() {}

func (x *WorkerQuery) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerQuery.ProtoReflect.Descriptor instead.
func (*WorkerQuery) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkerQuery) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WorkerQuery) GetHashAlg() string {
	if x != nil {
		return x.HashAlg
	}
	return ""
}

func (x *WorkerQuery) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *WorkerQuery) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type WorkerEndpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *NodeRef               `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Endpoints     []*NetworkEndpoint     `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	CapacityFree  *ResourceCapacity      `protobuf:"bytes,3,opt,name=capacity_free,json=capacityFree,proto3" json:"capacity_free,omitempty"` // hint
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerEndpoint) Reset() {
	*x = WorkerEndpoint{}
	mi := &file_worker_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerEndpoint) ProtoMessage() {}

func (x *WorkerEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerEndpoint.ProtoReflect.Descriptor instead.
func (*WorkerEndpoint) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{11}
}

func (x *WorkerEndpoint) GetNode() *NodeRef {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *WorkerEndpoint) GetEndpoints() []*NetworkEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *WorkerEndpoint) GetCapacityFree() *ResourceCapacity {
	if x != nil {
		return x.CapacityFree
	}
	return nil
}

func (x *WorkerEndpoint) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type WorkerQueryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Function      *FunctionDesc          `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`     // совпавшая функция
	Candidates    []*WorkerEndpoint      `protobuf:"bytes,2,rep,name=candidates,proto3" json:"candidates,omitempty"` // провайдеры
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerQueryReply) Reset() {
	*x = WorkerQueryReply{}
	mi := &file_worker_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerQueryReply) ProtoMessage() {}

func (x *WorkerQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerQueryReply.ProtoReflect.Descriptor instead.
func (*WorkerQueryReply) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{12}
}

func (x *WorkerQueryReply) GetFunction() *FunctionDesc {
	if x != nil {
		return x.Function
	}
	return nil
}

func (x *WorkerQueryReply) GetCandidates() []*WorkerEndpoint {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type WorkerUpdate struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	WorkerId string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// Поля-дельты (любое может быть пустым)
	AddFunctions    []*FunctionDesc    `protobuf:"bytes,2,rep,name=add_functions,json=addFunctions,proto3" json:"add_functions,omitempty"`
	RemoveFunctions []string           `protobuf:"bytes,3,rep,name=remove_functions,json=removeFunctions,proto3" json:"remove_functions,omitempty"`
	CapacityTotal   *ResourceCapacity  `protobuf:"bytes,4,opt,name=capacity_total,json=capacityTotal,proto3" json:"capacity_total,omitempty"`
	CapacityFree    *ResourceCapacity  `protobuf:"bytes,5,opt,name=capacity_free,json=capacityFree,proto3" json:"capacity_free,omitempty"`
	Storage         []*StorageMount    `protobuf:"bytes,6,rep,name=storage,proto3" json:"storage,omitempty"`
	Endpoints       []*NetworkEndpoint `protobuf:"bytes,7,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Features        *FeatureFlags      `protobuf:"bytes,8,opt,name=features,proto3" json:"features,omitempty"`
	LabelsSet       map[string]string  `protobuf:"bytes,9,rep,name=labels_set,json=labelsSet,proto3" json:"labels_set,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LabelsDel       []string           `protobuf:"bytes,10,rep,name=labels_del,json=labelsDel,proto3" json:"labels_del,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkerUpdate) Reset() {
	*x = WorkerUpdate{}
	mi := &file_worker_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerUpdate) ProtoMessage() {}

func (x *WorkerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerUpdate.ProtoReflect.Descriptor instead.
func (*WorkerUpdate) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{13}
}

func (x *WorkerUpdate) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerUpdate) GetAddFunctions() []*FunctionDesc {
	if x != nil {
		return x.AddFunctions
	}
	return nil
}

func (x *WorkerUpdate) GetRemoveFunctions() []string {
	if x != nil {
		return x.RemoveFunctions
	}
	return nil
}

func (x *WorkerUpdate) GetCapacityTotal() *ResourceCapacity {
	if x != nil {
		return x.CapacityTotal
	}
	return nil
}

func (x *WorkerUpdate) GetCapacityFree() *ResourceCapacity {
	if x != nil {
		return x.CapacityFree
	}
	return nil
}

func (x *WorkerUpdate) GetStorage() []*StorageMount {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *WorkerUpdate) GetEndpoints() []*NetworkEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *WorkerUpdate) GetFeatures() *FeatureFlags {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *WorkerUpdate) GetLabelsSet() map[string]string {
	if x != nil {
		return x.LabelsSet
	}
	return nil
}

func (x *WorkerUpdate) GetLabelsDel() []string {
	if x != nil {
		return x.LabelsDel
	}
	return nil
}

type WorkerHeartbeat struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	WorkerId string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// моментальные метрики загрузки
	CpuUtil       float64            `protobuf:"fixed64,2,opt,name=cpu_util,json=cpuUtil,proto3" json:"cpu_util,omitempty"` // 0..1
	MemUtil       float64            `protobuf:"fixed64,3,opt,name=mem_util,json=memUtil,proto3" json:"mem_util,omitempty"` // 0..1
	GpuUtil       float64            `protobuf:"fixed64,4,opt,name=gpu_util,json=gpuUtil,proto3" json:"gpu_util,omitempty"` // 0..1 (усреднённо)
	RunningTasks  uint32             `protobuf:"varint,5,opt,name=running_tasks,json=runningTasks,proto3" json:"running_tasks,omitempty"`
	RxMbps        float64            `protobuf:"fixed64,6,opt,name=rx_mbps,json=rxMbps,proto3" json:"rx_mbps,omitempty"`                                                              // входящий трафик
	TxMbps        float64            `protobuf:"fixed64,7,opt,name=tx_mbps,json=txMbps,proto3" json:"tx_mbps,omitempty"`                                                              // исходящий трафик
	Custom        map[string]float64 `protobuf:"bytes,50,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // любые дополнительные метрики
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerHeartbeat) Reset() {
	*x = WorkerHeartbeat{}
	mi := &file_worker_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartbeat) ProtoMessage() {}

func (x *WorkerHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartbeat.ProtoReflect.Descriptor instead.
func (*WorkerHeartbeat) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{14}
}

func (x *WorkerHeartbeat) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerHeartbeat) GetCpuUtil() float64 {
	if x != nil {
		return x.CpuUtil
	}
	return 0
}

func (x *WorkerHeartbeat) GetMemUtil() float64 {
	if x != nil {
		return x.MemUtil
	}
	return 0
}

func (x *WorkerHeartbeat) GetGpuUtil() float64 {
	if x != nil {
		return x.GpuUtil
	}
	return 0
}

func (x *WorkerHeartbeat) GetRunningTasks() uint32 {
	if x != nil {
		return x.RunningTasks
	}
	return 0
}

func (x *WorkerHeartbeat) GetRxMbps() float64 {
	if x != nil {
		return x.RxMbps
	}
	return 0
}

func (x *WorkerHeartbeat) GetTxMbps() float64 {
	if x != nil {
		return x.TxMbps
	}
	return 0
}

func (x *WorkerHeartbeat) GetCustom() map[string]float64 {
	if x != nil {
		return x.Custom
	}
	return nil
}

type WorkerDeregister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // человекочитаемая причина
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerDeregister) Reset() {
	*x = WorkerDeregister{}
	mi := &file_worker_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerDeregister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerDeregister) ProtoMessage() {}

func (x *WorkerDeregister) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerDeregister.ProtoReflect.Descriptor instead.
func (*WorkerDeregister) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{15}
}

func (x *WorkerDeregister) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerDeregister) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Политика доступа: допускаемые клиенты и требования подписи
type AuthPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Требуется ли подпись запросов (на уровне сессии/вызова)
	RequireSignature bool `protobuf:"varint,1,opt,name=require_signature,json=requireSignature,proto3" json:"require_signature,omitempty"`
	// Список разрешённых клиентов (peerId = pk:ed25519:...)
	AllowedPeerIds []string `protobuf:"bytes,2,rep,name=allowed_peer_ids,json=allowedPeerIds,proto3" json:"allowed_peer_ids,omitempty"`
	// Альтернативно, список разрешённых публичных ключей
	AllowedPubkeys [][]byte `protobuf:"bytes,3,rep,name=allowed_pubkeys,json=allowedPubkeys,proto3" json:"allowed_pubkeys,omitempty"`
	// Дополнительные параметры
	Ext           map[string]string `protobuf:"bytes,50,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthPolicy) Reset() {
	*x = AuthPolicy{}
	mi := &file_worker_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy) ProtoMessage() {}

func (x *AuthPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy.ProtoReflect.Descriptor instead.
func (*AuthPolicy) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{16}
}

func (x *AuthPolicy) GetRequireSignature() bool {
	if x != nil {
		return x.RequireSignature
	}
	return false
}

func (x *AuthPolicy) GetAllowedPeerIds() []string {
	if x != nil {
		return x.AllowedPeerIds
	}
	return nil
}

func (x *AuthPolicy) GetAllowedPubkeys() [][]byte {
	if x != nil {
		return x.AllowedPubkeys
	}
	return nil
}

func (x *AuthPolicy) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

var File_worker_proto protoreflect.FileDescriptor

const file_worker_proto_rawDesc = "" +
	"\n" +
	"\fworker.proto\x12\fttmesh.proto\x1a\fcommon.proto\x1a\rrouting.proto\x1a\n" +
	"task.proto\x1a\n" +
	"tiny.proto\"\x8e\x04\n" +
	"\fFeatureFlags\x122\n" +
	"\x15supports_stream_input\x18\x01 \x01(\bR\x13supportsStreamInput\x124\n" +
	"\x16supports_stream_output\x18\x02 \x01(\bR\x14supportsStreamOutput\x122\n" +
	"\x15supports_flow_control\x18\x03 \x01(\bR\x13supportsFlowControl\x121\n" +
	"\x14supports_compression\x18\x04 \x01(\bR\x13supportsCompression\x12#\n" +
	"\rsupports_quic\x18\x05 \x01(\bR\fsupportsQuic\x12#\n" +
	"\rsupports_grpc\x18\x06 \x01(\bR\fsupportsGrpc\x12!\n" +
	"\fsupports_shm\x18\a \x01(\bR\vsupportsShm\x12#\n" +
	"\rsupports_mmap\x18\b \x01(\bR\fsupportsMmap\x12,\n" +
	"\x12supports_zero_copy\x18\t \x01(\bR\x10supportsZeroCopy\x125\n" +
	"\x03ext\x182 \x03(\v2#.ttmesh.proto.FeatureFlags.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x02\n" +
	"\x10ResourceCapacity\x12%\n" +
	"\x0ecpu_millicores\x18\x01 \x01(\rR\rcpuMillicores\x12\x1b\n" +
	"\tmem_bytes\x18\x02 \x01(\x04R\bmemBytes\x12\x1b\n" +
	"\tgpu_count\x18\x03 \x01(\rR\bgpuCount\x12\x1d\n" +
	"\n" +
	"vram_bytes\x18\x04 \x01(\x04R\tvramBytes\x129\n" +
	"\x03ext\x182 \x03(\v2'.ttmesh.proto.ResourceCapacity.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x01\n" +
	"\aGpuInfo\x12\x16\n" +
	"\x06vendor\x18\x01 \x01(\tR\x06vendor\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x1f\n" +
	"\vcompute_cap\x18\x03 \x01(\tR\n" +
	"computeCap\x12\x1d\n" +
	"\n" +
	"vram_bytes\x18\x04 \x01(\x04R\tvramBytes\x120\n" +
	"\x03ext\x182 \x03(\v2\x1e.ttmesh.proto.GpuInfo.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x01\n" +
	"\tAccelInfo\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x122\n" +
	"\x03ext\x182 \x03(\v2 .ttmesh.proto.AccelInfo.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xff\x01\n" +
	"\fStorageMount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12%\n" +
	"\x0ecapacity_bytes\x18\x04 \x01(\x04R\rcapacityBytes\x12\x1d\n" +
	"\n" +
	"free_bytes\x18\x05 \x01(\x04R\tfreeBytes\x128\n" +
	"\x04tags\x182 \x03(\v2$.ttmesh.proto.StorageMount.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc1\x01\n" +
	"\x0fNetworkEndpoint\x12\x16\n" +
	"\x06scheme\x18\x01 \x01(\tR\x06scheme\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12A\n" +
	"\x06params\x18\x03 \x03(\v2).ttmesh.proto.NetworkEndpoint.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x02\n" +
	"\vResourceReq\x12%\n" +
	"\x0ecpu_millicores\x18\x01 \x01(\rR\rcpuMillicores\x12\x1b\n" +
	"\tmem_bytes\x18\x02 \x01(\x04R\bmemBytes\x12\x1b\n" +
	"\tgpu_count\x18\x03 \x01(\rR\bgpuCount\x12\x1b\n" +
	"\tgpu_class\x18\x04 \x01(\tR\bgpuClass\x12\x1d\n" +
	"\n" +
	"vram_bytes\x18\x05 \x01(\x04R\tvramBytes\x12\"\n" +
	"\faccelerators\x18\x06 \x03(\tR\faccelerators\x124\n" +
	"\x03ext\x182 \x03(\v2\".ttmesh.proto.ResourceReq.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x03\n" +
	"\fFunctionDesc\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1b\n" +
	"\tstable_id\x18\n" +
	" \x01(\tR\bstableId\x12\x19\n" +
	"\bhash_alg\x18\v \x01(\tR\ahashAlg\x12\x12\n" +
	"\x04hash\x18\f \x01(\fR\x04hash\x12!\n" +
	"\fstream_input\x18\x03 \x01(\bR\vstreamInput\x12#\n" +
	"\rstream_output\x18\x04 \x01(\bR\fstreamOutput\x12)\n" +
	"\x10priority_default\x18\x05 \x01(\rR\x0fpriorityDefault\x122\n" +
	"\amin_req\x18\x06 \x01(\v2\x19.ttmesh.proto.ResourceReqR\x06minReq\x128\n" +
	"\x04meta\x182 \x03(\v2$.ttmesh.proto.FunctionDesc.MetaEntryR\x04meta\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x06\n" +
	"\x0eWorkerRegister\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12)\n" +
	"\x04self\x18\x02 \x01(\v2\x15.ttmesh.proto.NodeRefR\x04self\x128\n" +
	"\tfunctions\x18\x03 \x03(\v2\x1a.ttmesh.proto.FunctionDescR\tfunctions\x12E\n" +
	"\x0ecapacity_total\x18\x04 \x01(\v2\x1e.ttmesh.proto.ResourceCapacityR\rcapacityTotal\x12C\n" +
	"\rcapacity_free\x18\x05 \x01(\v2\x1e.ttmesh.proto.ResourceCapacityR\fcapacityFree\x12)\n" +
	"\x04gpus\x18\x06 \x03(\v2\x15.ttmesh.proto.GpuInfoR\x04gpus\x12/\n" +
	"\x06accels\x18\a \x03(\v2\x17.ttmesh.proto.AccelInfoR\x06accels\x124\n" +
	"\astorage\x18\b \x03(\v2\x1a.ttmesh.proto.StorageMountR\astorage\x12;\n" +
	"\tendpoints\x18\t \x03(\v2\x1d.ttmesh.proto.NetworkEndpointR\tendpoints\x126\n" +
	"\bfeatures\x18\n" +
	" \x01(\v2\x1a.ttmesh.proto.FeatureFlagsR\bfeatures\x12\x16\n" +
	"\x06region\x18\v \x01(\tR\x06region\x12\x12\n" +
	"\x04zone\x18\f \x01(\tR\x04zone\x12\x19\n" +
	"\bgeo_hash\x18\r \x01(\tR\ageoHash\x12@\n" +
	"\x06labels\x18\x0e \x03(\v2(.ttmesh.proto.WorkerRegister.LabelsEntryR\x06labels\x12\x1d\n" +
	"\n" +
	"public_key\x18\x0f \x01(\fR\tpublicKey\x12:\n" +
	"\x04auth\x18\x10 \x03(\v2&.ttmesh.proto.WorkerRegister.AuthEntryR\x04auth\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a7\n" +
	"\tAuthEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x01\n" +
	"\fWorkerAdvert\x12)\n" +
	"\x04self\x18\x01 \x01(\v2\x15.ttmesh.proto.NodeRefR\x04self\x128\n" +
	"\tfunctions\x18\x02 \x03(\v2\x1a.ttmesh.proto.FunctionDescR\tfunctions\x12\x1c\n" +
	"\n" +
	"ts_unix_ms\x18\x03 \x01(\x03R\btsUnixMs\"\xe4\x01\n" +
	"\vWorkerQuery\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x19\n" +
	"\bhash_alg\x18\x03 \x01(\tR\ahashAlg\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\fR\x04hash\x12=\n" +
	"\x06labels\x18\x05 \x03(\v2%.ttmesh.proto.WorkerQuery.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x02\n" +
	"\x0eWorkerEndpoint\x12)\n" +
	"\x04node\x18\x01 \x01(\v2\x15.ttmesh.proto.NodeRefR\x04node\x12;\n" +
	"\tendpoints\x18\x02 \x03(\v2\x1d.ttmesh.proto.NetworkEndpointR\tendpoints\x12C\n" +
	"\rcapacity_free\x18\x03 \x01(\v2\x1e.ttmesh.proto.ResourceCapacityR\fcapacityFree\x12@\n" +
	"\x06labels\x18\x04 \x03(\v2(.ttmesh.proto.WorkerEndpoint.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x01\n" +
	"\x10WorkerQueryReply\x126\n" +
	"\bfunction\x18\x01 \x01(\v2\x1a.ttmesh.proto.FunctionDescR\bfunction\x12<\n" +
	"\n" +
	"candidates\x18\x02 \x03(\v2\x1c.ttmesh.proto.WorkerEndpointR\n" +
	"candidates\"\xf5\x04\n" +
	"\fWorkerUpdate\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12?\n" +
	"\radd_functions\x18\x02 \x03(\v2\x1a.ttmesh.proto.FunctionDescR\faddFunctions\x12)\n" +
	"\x10remove_functions\x18\x03 \x03(\tR\x0fremoveFunctions\x12E\n" +
	"\x0ecapacity_total\x18\x04 \x01(\v2\x1e.ttmesh.proto.ResourceCapacityR\rcapacityTotal\x12C\n" +
	"\rcapacity_free\x18\x05 \x01(\v2\x1e.ttmesh.proto.ResourceCapacityR\fcapacityFree\x124\n" +
	"\astorage\x18\x06 \x03(\v2\x1a.ttmesh.proto.StorageMountR\astorage\x12;\n" +
	"\tendpoints\x18\a \x03(\v2\x1d.ttmesh.proto.NetworkEndpointR\tendpoints\x126\n" +
	"\bfeatures\x18\b \x01(\v2\x1a.ttmesh.proto.FeatureFlagsR\bfeatures\x12H\n" +
	"\n" +
	"labels_set\x18\t \x03(\v2).ttmesh.proto.WorkerUpdate.LabelsSetEntryR\tlabelsSet\x12\x1d\n" +
	"\n" +
	"labels_del\x18\n" +
	" \x03(\tR\tlabelsDel\x1a<\n" +
	"\x0eLabelsSetEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x02\n" +
	"\x0fWorkerHeartbeat\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x19\n" +
	"\bcpu_util\x18\x02 \x01(\x01R\acpuUtil\x12\x19\n" +
	"\bmem_util\x18\x03 \x01(\x01R\amemUtil\x12\x19\n" +
	"\bgpu_util\x18\x04 \x01(\x01R\agpuUtil\x12#\n" +
	"\rrunning_tasks\x18\x05 \x01(\rR\frunningTasks\x12\x17\n" +
	"\arx_mbps\x18\x06 \x01(\x01R\x06rxMbps\x12\x17\n" +
	"\atx_mbps\x18\a \x01(\x01R\x06txMbps\x12A\n" +
	"\x06custom\x182 \x03(\v2).ttmesh.proto.WorkerHeartbeat.CustomEntryR\x06custom\x1a9\n" +
	"\vCustomEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"G\n" +
	"\x10WorkerDeregister\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xf9\x01\n" +
	"\n" +
	"AuthPolicy\x12+\n" +
	"\x11require_signature\x18\x01 \x01(\bR\x10requireSignature\x12(\n" +
	"\x10allowed_peer_ids\x18\x02 \x03(\tR\x0eallowedPeerIds\x12'\n" +
	"\x0fallowed_pubkeys\x18\x03 \x03(\fR\x0eallowedPubkeys\x123\n" +
	"\x03ext\x182 \x03(\v2!.ttmesh.proto.AuthPolicy.ExtEntryR\x03ext\x1a6\n" +
	"\bExtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B'Z%ttmesh/pkg/protocol/proto;ttmeshprotob\x06proto3"

var (
	file_worker_proto_rawDescOnce sync.Once
	file_worker_proto_rawDescData []byte
)

func file_worker_proto_rawDescGZIP() []byte {
	file_worker_proto_rawDescOnce.Do(func() {
		file_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)))
	})
	return file_worker_proto_rawDescData
}

var file_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_worker_proto_goTypes = []any{
	(*FeatureFlags)(nil),     // 0: ttmesh.proto.FeatureFlags
	(*ResourceCapacity)(nil), // 1: ttmesh.proto.ResourceCapacity
	(*GpuInfo)(nil),          // 2: ttmesh.proto.GpuInfo
	(*AccelInfo)(nil),        // 3: ttmesh.proto.AccelInfo
	(*StorageMount)(nil),     // 4: ttmesh.proto.StorageMount
	(*NetworkEndpoint)(nil),  // 5: ttmesh.proto.NetworkEndpoint
	(*ResourceReq)(nil),      // 6: ttmesh.proto.ResourceReq
	(*FunctionDesc)(nil),     // 7: ttmesh.proto.FunctionDesc
	(*WorkerRegister)(nil),   // 8: ttmesh.proto.WorkerRegister
	(*WorkerAdvert)(nil),     // 9: ttmesh.proto.WorkerAdvert
	(*WorkerQuery)(nil),      // 10: ttmesh.proto.WorkerQuery
	(*WorkerEndpoint)(nil),   // 11: ttmesh.proto.WorkerEndpoint
	(*WorkerQueryReply)(nil), // 12: ttmesh.proto.WorkerQueryReply
	(*WorkerUpdate)(nil),     // 13: ttmesh.proto.WorkerUpdate
	(*WorkerHeartbeat)(nil),  // 14: ttmesh.proto.WorkerHeartbeat
	(*WorkerDeregister)(nil), // 15: ttmesh.proto.WorkerDeregister
	(*AuthPolicy)(nil),       // 16: ttmesh.proto.AuthPolicy
	nil,                      // 17: ttmesh.proto.FeatureFlags.ExtEntry
	nil,                      // 18: ttmesh.proto.ResourceCapacity.ExtEntry
	nil,                      // 19: ttmesh.proto.GpuInfo.ExtEntry
	nil,                      // 20: ttmesh.proto.AccelInfo.ExtEntry
	nil,                      // 21: ttmesh.proto.StorageMount.TagsEntry
	nil,                      // 22: ttmesh.proto.NetworkEndpoint.ParamsEntry
	nil,                      // 23: ttmesh.proto.ResourceReq.ExtEntry
	nil,                      // 24: ttmesh.proto.FunctionDesc.MetaEntry
	nil,                      // 25: ttmesh.proto.WorkerRegister.LabelsEntry
	nil,                      // 26: ttmesh.proto.WorkerRegister.AuthEntry
	nil,                      // 27: ttmesh.proto.WorkerQuery.LabelsEntry
	nil,                      // 28: ttmesh.proto.WorkerEndpoint.LabelsEntry
	nil,                      // 29: ttmesh.proto.WorkerUpdate.LabelsSetEntry
	nil,                      // 30: ttmesh.proto.WorkerHeartbeat.CustomEntry
	nil,                      // 31: ttmesh.proto.AuthPolicy.ExtEntry
	(*NodeRef)(nil),          // 32: ttmesh.proto.NodeRef
}
var file_worker_proto_depIdxs = []int32{
	17, // 0: ttmesh.proto.FeatureFlags.ext:type_name -> ttmesh.proto.FeatureFlags.ExtEntry
	18, // 1: ttmesh.proto.ResourceCapacity.ext:type_name -> ttmesh.proto.ResourceCapacity.ExtEntry
	19, // 2: ttmesh.proto.GpuInfo.ext:type_name -> ttmesh.proto.GpuInfo.ExtEntry
	20, // 3: ttmesh.proto.AccelInfo.ext:type_name -> ttmesh.proto.AccelInfo.ExtEntry
	21, // 4: ttmesh.proto.StorageMount.tags:type_name -> ttmesh.proto.StorageMount.TagsEntry
	22, // 5: ttmesh.proto.NetworkEndpoint.params:type_name -> ttmesh.proto.NetworkEndpoint.ParamsEntry
	23, // 6: ttmesh.proto.ResourceReq.ext:type_name -> ttmesh.proto.ResourceReq.ExtEntry
	6,  // 7: ttmesh.proto.FunctionDesc.min_req:type_name -> ttmesh.proto.ResourceReq
	24, // 8: ttmesh.proto.FunctionDesc.meta:type_name -> ttmesh.proto.FunctionDesc.MetaEntry
	32, // 9: ttmesh.proto.WorkerRegister.self:type_name -> ttmesh.proto.NodeRef
	7,  // 10: ttmesh.proto.WorkerRegister.functions:type_name -> ttmesh.proto.FunctionDesc
	1,  // 11: ttmesh.proto.WorkerRegister.capacity_total:type_name -> ttmesh.proto.ResourceCapacity
	1,  // 12: ttmesh.proto.WorkerRegister.capacity_free:type_name -> ttmesh.proto.ResourceCapacity
	2,  // 13: ttmesh.proto.WorkerRegister.gpus:type_name -> ttmesh.proto.GpuInfo
	3,  // 14: ttmesh.proto.WorkerRegister.accels:type_name -> ttmesh.proto.AccelInfo
	4,  // 15: ttmesh.proto.WorkerRegister.storage:type_name -> ttmesh.proto.StorageMount
	5,  // 16: ttmesh.proto.WorkerRegister.endpoints:type_name -> ttmesh.proto.NetworkEndpoint
	0,  // 17: ttmesh.proto.WorkerRegister.features:type_name -> ttmesh.proto.FeatureFlags
	25, // 18: ttmesh.proto.WorkerRegister.labels:type_name -> ttmesh.proto.WorkerRegister.LabelsEntry
	26, // 19: ttmesh.proto.WorkerRegister.auth:type_name -> ttmesh.proto.WorkerRegister.AuthEntry
	32, // 20: ttmesh.proto.WorkerAdvert.self:type_name -> ttmesh.proto.NodeRef
	7,  // 21: ttmesh.proto.WorkerAdvert.functions:type_name -> ttmesh.proto.FunctionDesc
	27, // 22: ttmesh.proto.WorkerQuery.labels:type_name -> ttmesh.proto.WorkerQuery.LabelsEntry
	32, // 23: ttmesh.proto.WorkerEndpoint.node:type_name -> ttmesh.proto.NodeRef
	5,  // 24: ttmesh.proto.WorkerEndpoint.endpoints:type_name -> ttmesh.proto.NetworkEndpoint
	1,  // 25: ttmesh.proto.WorkerEndpoint.capacity_free:type_name -> ttmesh.proto.ResourceCapacity
	28, // 26: ttmesh.proto.WorkerEndpoint.labels:type_name -> ttmesh.proto.WorkerEndpoint.LabelsEntry
	7,  // 27: ttmesh.proto.WorkerQueryReply.function:type_name -> ttmesh.proto.FunctionDesc
	11, // 28: ttmesh.proto.WorkerQueryReply.candidates:type_name -> ttmesh.proto.WorkerEndpoint
	7,  // 29: ttmesh.proto.WorkerUpdate.add_functions:type_name -> ttmesh.proto.FunctionDesc
	1,  // 30: ttmesh.proto.WorkerUpdate.capacity_total:type_name -> ttmesh.proto.ResourceCapacity
	1,  // 31: ttmesh.proto.WorkerUpdate.capacity_free:type_name -> ttmesh.proto.ResourceCapacity
	4,  // 32: ttmesh.proto.WorkerUpdate.storage:type_name -> ttmesh.proto.StorageMount
	5,  // 33: ttmesh.proto.WorkerUpdate.endpoints:type_name -> ttmesh.proto.NetworkEndpoint
	0,  // 34: ttmesh.proto.WorkerUpdate.features:type_name -> ttmesh.proto.FeatureFlags
	29, // 35: ttmesh.proto.WorkerUpdate.labels_set:type_name -> ttmesh.proto.WorkerUpdate.LabelsSetEntry
	30, // 36: ttmesh.proto.WorkerHeartbeat.custom:type_name -> ttmesh.proto.WorkerHeartbeat.CustomEntry
	31, // 37: ttmesh.proto.AuthPolicy.ext:type_name -> ttmesh.proto.AuthPolicy.ExtEntry
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_worker_proto_init() }
func file_worker_proto_init() {
	if File_worker_proto != nil {
		return
	}
	file_common_proto_init()
	file_routing_proto_init()
	file_task_proto_init()
	file_tiny_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worker_proto_goTypes,
		DependencyIndexes: file_worker_proto_depIdxs,
		MessageInfos:      file_worker_proto_msgTypes,
	}.Build()
	File_worker_proto = out.File
	file_worker_proto_goTypes = nil
	file_worker_proto_depIdxs = nil
}
