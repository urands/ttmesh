// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: tiny.proto

package ttmeshproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Minimal bus header to support shared "one channel" transport
// Useful for brokers (headers) or QUIC (prefix before payload)
type BusKind int32

const (
	BusKind_BK_UNKNOWN BusKind = 0
	BusKind_BK_INVOKE  BusKind = 1
	BusKind_BK_CHUNK   BusKind = 2
	BusKind_BK_RESULT  BusKind = 3
	BusKind_BK_CONTROL BusKind = 4
	BusKind_BK_ACK     BusKind = 5
	BusKind_BK_GOSSIP  BusKind = 6
	BusKind_BK_LEASE   BusKind = 7
)

// Enum value maps for BusKind.
var (
	BusKind_name = map[int32]string{
		0: "BK_UNKNOWN",
		1: "BK_INVOKE",
		2: "BK_CHUNK",
		3: "BK_RESULT",
		4: "BK_CONTROL",
		5: "BK_ACK",
		6: "BK_GOSSIP",
		7: "BK_LEASE",
	}
	BusKind_value = map[string]int32{
		"BK_UNKNOWN": 0,
		"BK_INVOKE":  1,
		"BK_CHUNK":   2,
		"BK_RESULT":  3,
		"BK_CONTROL": 4,
		"BK_ACK":     5,
		"BK_GOSSIP":  6,
		"BK_LEASE":   7,
	}
)

func (x BusKind) Enum() *BusKind {
	p := new(BusKind)
	*p = x
	return p
}

func (x BusKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusKind) Descriptor() protoreflect.EnumDescriptor {
	return file_tiny_proto_enumTypes[0].Descriptor()
}

func (BusKind) Type() protoreflect.EnumType {
	return &file_tiny_proto_enumTypes[0]
}

func (x BusKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusKind.Descriptor instead.
func (BusKind) EnumDescriptor() ([]byte, []int) {
	return file_tiny_proto_rawDescGZIP(), []int{0}
}

type BusHeader struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Version   uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                      // =1
	Kind      BusKind                `protobuf:"varint,2,opt,name=kind,proto3,enum=ttmesh.proto.BusKind" json:"kind,omitempty"`  // invoke/chunk/result/control/ack/gossip/lease
	Priority  uint32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`                    // 0..7 (0 is highest)
	Flags     uint32                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`                          // reserved/bit flags
	ShardHash uint32                 `protobuf:"varint,5,opt,name=shard_hash,json=shardHash,proto3" json:"shard_hash,omitempty"` // hash(workflow_id) for partitioning
	// Optional varlen hints for routing/fanout (may be empty)
	WorkflowId      string `protobuf:"bytes,10,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	StepId          string `protobuf:"bytes,11,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	NodeScope       string `protobuf:"bytes,12,opt,name=node_scope,json=nodeScope,proto3" json:"node_scope,omitempty"`
	RegionScope     string `protobuf:"bytes,13,opt,name=region_scope,json=regionScope,proto3" json:"region_scope,omitempty"`
	CapabilityScope string `protobuf:"bytes,14,opt,name=capability_scope,json=capabilityScope,proto3" json:"capability_scope,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BusHeader) Reset() {
	*x = BusHeader{}
	mi := &file_tiny_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusHeader) ProtoMessage() {}

func (x *BusHeader) ProtoReflect() protoreflect.Message {
	mi := &file_tiny_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusHeader.ProtoReflect.Descriptor instead.
func (*BusHeader) Descriptor() ([]byte, []int) {
	return file_tiny_proto_rawDescGZIP(), []int{0}
}

func (x *BusHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BusHeader) GetKind() BusKind {
	if x != nil {
		return x.Kind
	}
	return BusKind_BK_UNKNOWN
}

func (x *BusHeader) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *BusHeader) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *BusHeader) GetShardHash() uint32 {
	if x != nil {
		return x.ShardHash
	}
	return 0
}

func (x *BusHeader) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *BusHeader) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *BusHeader) GetNodeScope() string {
	if x != nil {
		return x.NodeScope
	}
	return ""
}

func (x *BusHeader) GetRegionScope() string {
	if x != nil {
		return x.RegionScope
	}
	return ""
}

func (x *BusHeader) GetCapabilityScope() string {
	if x != nil {
		return x.CapabilityScope
	}
	return ""
}

// Tiny result: compact response form (protobuf representation)
// Mirrors the on-wire compact form used over QUIC
type TinyResult struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Scid   uint32                 `protobuf:"varint,1,opt,name=scid,proto3" json:"scid,omitempty"`                              // session context id
	Seq    uint64                 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                // local sequence number
	Final  bool                   `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`                            // final for current step
	Status Status                 `protobuf:"varint,4,opt,name=status,proto3,enum=ttmesh.proto.Status" json:"status,omitempty"` // OK/PARTIAL/FAILED/...
	// If set, identifies output name by dictionary index
	NameIndex *uint64 `protobuf:"varint,5,opt,name=name_index,json=nameIndex,proto3,oneof" json:"name_index,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TinyResult_InlinePayload
	//	*TinyResult_BlobIdShort
	Payload isTinyResult_Payload `protobuf_oneof:"payload"`
	// Optional metrics/progress (sent only when needed)
	Metrics       *Metrics `protobuf:"bytes,12,opt,name=metrics,proto3" json:"metrics,omitempty"`     // optional
	Progress      float32  `protobuf:"fixed32,13,opt,name=progress,proto3" json:"progress,omitempty"` // optional 0..1
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TinyResult) Reset() {
	*x = TinyResult{}
	mi := &file_tiny_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TinyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TinyResult) ProtoMessage() {}

func (x *TinyResult) ProtoReflect() protoreflect.Message {
	mi := &file_tiny_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TinyResult.ProtoReflect.Descriptor instead.
func (*TinyResult) Descriptor() ([]byte, []int) {
	return file_tiny_proto_rawDescGZIP(), []int{1}
}

func (x *TinyResult) GetScid() uint32 {
	if x != nil {
		return x.Scid
	}
	return 0
}

func (x *TinyResult) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *TinyResult) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *TinyResult) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_ST_OK
}

func (x *TinyResult) GetNameIndex() uint64 {
	if x != nil && x.NameIndex != nil {
		return *x.NameIndex
	}
	return 0
}

func (x *TinyResult) GetPayload() isTinyResult_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TinyResult) GetInlinePayload() []byte {
	if x != nil {
		if x, ok := x.Payload.(*TinyResult_InlinePayload); ok {
			return x.InlinePayload
		}
	}
	return nil
}

func (x *TinyResult) GetBlobIdShort() []byte {
	if x != nil {
		if x, ok := x.Payload.(*TinyResult_BlobIdShort); ok {
			return x.BlobIdShort
		}
	}
	return nil
}

func (x *TinyResult) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TinyResult) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type isTinyResult_Payload interface {
	isTinyResult_Payload()
}

type TinyResult_InlinePayload struct {
	InlinePayload []byte `protobuf:"bytes,10,opt,name=inline_payload,json=inlinePayload,proto3,oneof"` // small inline result
}

type TinyResult_BlobIdShort struct {
	BlobIdShort []byte `protobuf:"bytes,11,opt,name=blob_id_short,json=blobIdShort,proto3,oneof"` // short object id (8..16 bytes)
}

func (*TinyResult_InlinePayload) isTinyResult_Payload() {}

func (*TinyResult_BlobIdShort) isTinyResult_Payload() {}

// Session initialization: cache base params on the remote node
type SessionInit struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Scid               uint32                 `protobuf:"varint,1,opt,name=scid,proto3" json:"scid,omitempty"`                                                                                     // session context id (assigned by sender)
	WorkflowId         string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`                                                        // shard/workflow id
	StepId             string                 `protobuf:"bytes,3,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`                                                                    // current step id
	ReplyTo            *NodeRef               `protobuf:"bytes,4,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`                                                                 // where to send final/acks (logical)
	OutputNames        []string               `protobuf:"bytes,5,rep,name=output_names,json=outputNames,proto3" json:"output_names,omitempty"`                                                     // dictionary for TinyResult.name_index
	DefaultCodec       Codec                  `protobuf:"varint,6,opt,name=default_codec,json=defaultCodec,proto3,enum=ttmesh.proto.Codec" json:"default_codec,omitempty"`                         // default payload codec hint
	DefaultCompression Compression            `protobuf:"varint,7,opt,name=default_compression,json=defaultCompression,proto3,enum=ttmesh.proto.Compression" json:"default_compression,omitempty"` // default compression hint
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SessionInit) Reset() {
	*x = SessionInit{}
	mi := &file_tiny_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInit) ProtoMessage() {}

func (x *SessionInit) ProtoReflect() protoreflect.Message {
	mi := &file_tiny_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInit.ProtoReflect.Descriptor instead.
func (*SessionInit) Descriptor() ([]byte, []int) {
	return file_tiny_proto_rawDescGZIP(), []int{2}
}

func (x *SessionInit) GetScid() uint32 {
	if x != nil {
		return x.Scid
	}
	return 0
}

func (x *SessionInit) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SessionInit) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *SessionInit) GetReplyTo() *NodeRef {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

func (x *SessionInit) GetOutputNames() []string {
	if x != nil {
		return x.OutputNames
	}
	return nil
}

func (x *SessionInit) GetDefaultCodec() Codec {
	if x != nil {
		return x.DefaultCodec
	}
	return Codec_CODEC_RAW
}

func (x *SessionInit) GetDefaultCompression() Compression {
	if x != nil {
		return x.DefaultCompression
	}
	return Compression_COMP_NONE
}

// Session close: allows receiver to drop cached session data
type SessionClose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scid          uint32                 `protobuf:"varint,1,opt,name=scid,proto3" json:"scid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionClose) Reset() {
	*x = SessionClose{}
	mi := &file_tiny_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionClose) ProtoMessage() {}

func (x *SessionClose) ProtoReflect() protoreflect.Message {
	mi := &file_tiny_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionClose.ProtoReflect.Descriptor instead.
func (*SessionClose) Descriptor() ([]byte, []int) {
	return file_tiny_proto_rawDescGZIP(), []int{3}
}

func (x *SessionClose) GetScid() uint32 {
	if x != nil {
		return x.Scid
	}
	return 0
}

var File_tiny_proto protoreflect.FileDescriptor

const file_tiny_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"tiny.proto\x12\fttmesh.proto\x1a\fcommon.proto\"\xc8\x02\n" +
	"\tBusHeader\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12)\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x15.ttmesh.proto.BusKindR\x04kind\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\rR\bpriority\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\rR\x05flags\x12\x1d\n" +
	"\n" +
	"shard_hash\x18\x05 \x01(\rR\tshardHash\x12\x1f\n" +
	"\vworkflow_id\x18\n" +
	" \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\astep_id\x18\v \x01(\tR\x06stepId\x12\x1d\n" +
	"\n" +
	"node_scope\x18\f \x01(\tR\tnodeScope\x12!\n" +
	"\fregion_scope\x18\r \x01(\tR\vregionScope\x12)\n" +
	"\x10capability_scope\x18\x0e \x01(\tR\x0fcapabilityScope\"\xd0\x02\n" +
	"\n" +
	"TinyResult\x12\x12\n" +
	"\x04scid\x18\x01 \x01(\rR\x04scid\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x04R\x03seq\x12\x14\n" +
	"\x05final\x18\x03 \x01(\bR\x05final\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.ttmesh.proto.StatusR\x06status\x12\"\n" +
	"\n" +
	"name_index\x18\x05 \x01(\x04H\x01R\tnameIndex\x88\x01\x01\x12'\n" +
	"\x0einline_payload\x18\n" +
	" \x01(\fH\x00R\rinlinePayload\x12$\n" +
	"\rblob_id_short\x18\v \x01(\fH\x00R\vblobIdShort\x12/\n" +
	"\ametrics\x18\f \x01(\v2\x15.ttmesh.proto.MetricsR\ametrics\x12\x1a\n" +
	"\bprogress\x18\r \x01(\x02R\bprogressB\t\n" +
	"\apayloadB\r\n" +
	"\v_name_index\"\xb6\x02\n" +
	"\vSessionInit\x12\x12\n" +
	"\x04scid\x18\x01 \x01(\rR\x04scid\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\astep_id\x18\x03 \x01(\tR\x06stepId\x120\n" +
	"\breply_to\x18\x04 \x01(\v2\x15.ttmesh.proto.NodeRefR\areplyTo\x12!\n" +
	"\foutput_names\x18\x05 \x03(\tR\voutputNames\x128\n" +
	"\rdefault_codec\x18\x06 \x01(\x0e2\x13.ttmesh.proto.CodecR\fdefaultCodec\x12J\n" +
	"\x13default_compression\x18\a \x01(\x0e2\x19.ttmesh.proto.CompressionR\x12defaultCompression\"\"\n" +
	"\fSessionClose\x12\x12\n" +
	"\x04scid\x18\x01 \x01(\rR\x04scid*~\n" +
	"\aBusKind\x12\x0e\n" +
	"\n" +
	"BK_UNKNOWN\x10\x00\x12\r\n" +
	"\tBK_INVOKE\x10\x01\x12\f\n" +
	"\bBK_CHUNK\x10\x02\x12\r\n" +
	"\tBK_RESULT\x10\x03\x12\x0e\n" +
	"\n" +
	"BK_CONTROL\x10\x04\x12\n" +
	"\n" +
	"\x06BK_ACK\x10\x05\x12\r\n" +
	"\tBK_GOSSIP\x10\x06\x12\f\n" +
	"\bBK_LEASE\x10\aB'Z%ttmesh/pkg/protocol/proto;ttmeshprotob\x06proto3"

var (
	file_tiny_proto_rawDescOnce sync.Once
	file_tiny_proto_rawDescData []byte
)

func file_tiny_proto_rawDescGZIP() []byte {
	file_tiny_proto_rawDescOnce.Do(func() {
		file_tiny_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tiny_proto_rawDesc), len(file_tiny_proto_rawDesc)))
	})
	return file_tiny_proto_rawDescData
}

var file_tiny_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tiny_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tiny_proto_goTypes = []any{
	(BusKind)(0),         // 0: ttmesh.proto.BusKind
	(*BusHeader)(nil),    // 1: ttmesh.proto.BusHeader
	(*TinyResult)(nil),   // 2: ttmesh.proto.TinyResult
	(*SessionInit)(nil),  // 3: ttmesh.proto.SessionInit
	(*SessionClose)(nil), // 4: ttmesh.proto.SessionClose
	(Status)(0),          // 5: ttmesh.proto.Status
	(*Metrics)(nil),      // 6: ttmesh.proto.Metrics
	(*NodeRef)(nil),      // 7: ttmesh.proto.NodeRef
	(Codec)(0),           // 8: ttmesh.proto.Codec
	(Compression)(0),     // 9: ttmesh.proto.Compression
}
var file_tiny_proto_depIdxs = []int32{
	0, // 0: ttmesh.proto.BusHeader.kind:type_name -> ttmesh.proto.BusKind
	5, // 1: ttmesh.proto.TinyResult.status:type_name -> ttmesh.proto.Status
	6, // 2: ttmesh.proto.TinyResult.metrics:type_name -> ttmesh.proto.Metrics
	7, // 3: ttmesh.proto.SessionInit.reply_to:type_name -> ttmesh.proto.NodeRef
	8, // 4: ttmesh.proto.SessionInit.default_codec:type_name -> ttmesh.proto.Codec
	9, // 5: ttmesh.proto.SessionInit.default_compression:type_name -> ttmesh.proto.Compression
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tiny_proto_init() }
func file_tiny_proto_init() {
	if File_tiny_proto != nil {
		return
	}
	file_common_proto_init()
	file_tiny_proto_msgTypes[1].OneofWrappers = []any{
		(*TinyResult_InlinePayload)(nil),
		(*TinyResult_BlobIdShort)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tiny_proto_rawDesc), len(file_tiny_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tiny_proto_goTypes,
		DependencyIndexes: file_tiny_proto_depIdxs,
		EnumInfos:         file_tiny_proto_enumTypes,
		MessageInfos:      file_tiny_proto_msgTypes,
	}.Build()
	File_tiny_proto = out.File
	file_tiny_proto_goTypes = nil
	file_tiny_proto_depIdxs = nil
}
